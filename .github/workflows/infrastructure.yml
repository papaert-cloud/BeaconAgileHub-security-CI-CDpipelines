name: 🏢 Infrastructure Deployment - Reusable Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      terraform_action:
        required: false
        type: string
        default: 'apply'
      destroy_protection:
        required: false
        type: boolean
        default: true
    secrets:
      AWS_ROLE_ARN:
        required: true
      TF_VAR_github_token:
        required: true

env:
  TERRAFORM_VERSION: "1.6.6"
  TERRAGRUNT_VERSION: "0.54.8"
  AWS_REGION: "us-east-1"

jobs:
  terraform-validation:
    name: Terraform Validation
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          
      - name: Terraform Format Check
        run: terraform fmt -check -recursive terraform/
        
      - name: Terraform Validate
        run: |
          for dir in terraform/modules/*/; do
            if [ -d "$dir" ]; then
              echo "Validating $dir"
              cd "$dir"
              terraform init -backend=false
              terraform validate
              cd - > /dev/null
            fi
          done

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-22.04
    needs: terraform-validation
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    outputs:
      plan-exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          
      - name: Setup Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/
          terragrunt --version
          
      - name: Terragrunt Init
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: terragrunt init --terragrunt-non-interactive
        
      - name: Terragrunt Plan
        id: plan
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: |
          terragrunt plan -detailed-exitcode -out=tfplan --terragrunt-non-interactive
          echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
        
      - name: Security Scan Infrastructure
        run: |
          docker run --rm -v $(pwd):/workspace bridgecrew/checkov:2.5.24 -d /workspace/terragrunt --framework terraform --quiet

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-22.04
    needs: terraform-plan
    if: ${{ needs.terraform-plan.outputs.plan-exitcode == '2' && inputs.terraform_action == 'apply' }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          
      - name: Setup Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/
          
      - name: Terragrunt Apply
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: terragrunt apply -auto-approve --terragrunt-non-interactive
        
      - name: Post-Apply Validation
        run: |
          echo "✅ Infrastructure deployment completed successfully" >> $GITHUB_STEP_SUMMARY