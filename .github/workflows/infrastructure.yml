name: Infrastructure Deployment - Reusable Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      terraform_action:
        required: false
        type: string
        default: 'apply'
      destroy_protection:
        required: false
        type: boolean
        default: true
    secrets:
      AWS_ROLE_ARN:
        required: true
      TF_VAR_github_token:
        required: true

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    outputs:
      plan-exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          
      - name: Setup Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.53.0/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          
      - name: Terragrunt Init
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: terragrunt init
        
      - name: Terragrunt Plan
        id: plan
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: |
          terragrunt plan -detailed-exitcode -out=tfplan
        continue-on-error: true
        
      - name: Security Scan Infrastructure
        run: |
          docker run --rm -v $(pwd):/workspace bridgecrew/checkov -d /workspace/terragrunt --framework terraform

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: ${{ needs.terraform-plan.outputs.plan-exitcode == '2' && inputs.terraform_action == 'apply' }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          
      - name: Setup Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.53.0/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          
      - name: Terragrunt Apply
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: terragrunt apply -auto-approve
        
      - name: Update Security Hub
        run: |
          aws securityhub batch-import-findings --findings file://security-findings.json