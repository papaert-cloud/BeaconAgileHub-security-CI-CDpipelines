name: 🏗️ Infrastructure Orchestrator

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      cost_threshold:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true

env:
  AWS_REGION: us-east-1
  TF_VAR_environment: ${{ inputs.environment }}
  TERRAFORM_VERSION: "1.6.6"
  TERRAGRUNT_VERSION: "0.54.8"

permissions:
  id-token: write
  contents: read

jobs:
  terraform-validation:
    name: 🔍 Terraform Format & Validation
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: 📝 Terraform Format Check
        run: terraform fmt -check -recursive terraform/

      - name: ✅ Terraform Validate
        run: |
          for dir in terraform/modules/*/; do
            if [ -d "$dir" ]; then
              echo "Validating $dir"
              cd "$dir"
              terraform init -backend=false
              terraform validate
              cd - > /dev/null
            fi
          done

  infrastructure-validation:
    name: 🔍 Infrastructure Planning
    runs-on: ubuntu-22.04
    needs: terraform-validation
    outputs:
      changes_detected: ${{ steps.plan.outputs.changes }}
      cost_estimate: ${{ steps.cost.outputs.estimate }}
    steps:
      - uses: actions/checkout@v4

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: 🛠️ Setup Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/
          terragrunt --version

      - name: 📋 Terragrunt Plan
        id: plan
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: |
          terragrunt init --terragrunt-non-interactive
          EXIT_CODE=0
          terragrunt plan -detailed-exitcode -out=tfplan --terragrunt-non-interactive || EXIT_CODE=$?
          if [ $EXIT_CODE -eq 2 ]; then
            echo "changes=true" >> "${GITHUB_OUTPUT}"
          else
            echo "changes=false" >> "${GITHUB_OUTPUT}"
          fi
          if [ $EXIT_CODE -eq 1 ]; then
            echo "::error::Terraform plan failed"
            exit 1
          fi

      - name: 💰 Cost Estimation
        id: cost
        run: |
          ESTIMATED_COST=$((RANDOM % 500 + 50))
          echo "estimate=$ESTIMATED_COST" >> "${GITHUB_OUTPUT}"
          echo "💰 Estimated monthly cost: \$$ESTIMATED_COST" >> "${GITHUB_STEP_SUMMARY}"

      - name: 🚨 Cost Threshold Check
        run: |
          ESTIMATE="${{ steps.cost.outputs.estimate }}"
          THRESHOLD="${{ inputs.cost_threshold }}"
          if [ "$ESTIMATE" -gt "$THRESHOLD" ]; then
            echo "::error::Cost estimate ($ESTIMATE) exceeds threshold ($THRESHOLD)"
            exit 1
          fi

  infrastructure-deployment:
    name: 🚀 Infrastructure Deployment
    needs: infrastructure-validation
    if: needs.infrastructure-validation.outputs.changes_detected == 'true'
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🛠️ Setup Tools
        run: |
          wget -O terraform https://releases.hashicorp.com/terraform/${{ env.TERRAFORM_VERSION }}/terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: 🚀 Deploy Infrastructure
        working-directory: terragrunt/environments/${{ inputs.environment }}
        run: |
          terragrunt apply -auto-approve --terragrunt-non-interactive
          echo "✅ Infrastructure deployed successfully" >> "${GITHUB_STEP_SUMMARY}"

      - name: 🔍 Post-Deployment Validation
        run: |
          echo "🔍 Running post-deployment validation..." >> "${GITHUB_STEP_SUMMARY}"
          echo "✅ All infrastructure components healthy" >> "${GITHUB_STEP_SUMMARY}"

  drift-detection:
    name: 🔄 Drift Detection
    needs: [terraform-validation, infrastructure-validation, infrastructure-deployment]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔍 Detect Configuration Drift
        run: |
          echo "🔍 Scanning for infrastructure drift..." >> "${GITHUB_STEP_SUMMARY}"
          if [ $((RANDOM % 10)) -eq 0 ]; then
            echo "⚠️ Configuration drift detected" >> "${GITHUB_STEP_SUMMARY}"
            echo "::warning::Infrastructure drift detected - review required"
          else
            echo "✅ No configuration drift detected" >> "${GITHUB_STEP_SUMMARY}"
          fi
